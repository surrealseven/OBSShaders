// include filter shader variables
#include "SrlFilterEffect.h"



uniform float Progress <
	string name = "Progress";
	string field_type = "slider";
	float step = 0.01;
	float minimum = 0;
	float maximum = 1;
> = 1;

uniform float4 BackgroundColor <
	string name = "Background Color";
	string field_type = "slider";
	float4 minimum = { 0.0, 0.0, 0.0, 0.0 };
	float4 maximum = { 1.0, 1.0, 1.0, 1.0 };
> = { 0.0, 0.0, 0.0, 0.0 };


// ---------- Shader Code
sampler_state def_sampler {
	AddressU  = Clamp;
	AddressV  = Clamp;
	Filter    = Linear;
};

struct VertData {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

VertData VSDefault(VertData v_in) 
{
	VertData vert_out;
	vert_out.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = v_in.uv;
	return vert_out;
}

float4 PSSwipe(VertData v_in) : TARGET 
{	
	float4 color = InputA.Sample(def_sampler, v_in.uv);

	float clip = step(v_in.uv.x, Progress);
	color *= clip;
	color += BackgroundColor * (1 - clip);

	return color;
}

float4 PSSlide(VertData v_in) : TARGET
{
	float2 uv = v_in.uv + (1 - Progress);

	float4 color = InputA.Sample(def_sampler, uv);

	float clip = step(uv.x, 1);
	color *= clip;
	color += BackgroundColor * (1 - clip);

	return color;
}



technique Swipe
{
	pass
	{
		vertex_shader = VSDefault(v_in);
		pixel_shader  = PSSwipe(v_in); 
	}
}

technique Slide
{
	pass
	{
		vertex_shader = VSDefault(v_in);
		pixel_shader = PSSlide(v_in);
	}
}
