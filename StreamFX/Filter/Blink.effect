// include filter shader variables
#include "SrlFilterEffect.h"




uniform float Frequency <
	string name = "Frequency";
	string field_type = "input";
> = 1;

uniform float DutyCycle <
	string name = "Duty Cycle";
	string field_type = "slider";
	float minimum = 0;
	float maximum = 1;
	float step = 0.01;
> = 0.5;

uniform float Smoothing <
	string name = "Smoothing";
	string field_type = "slider";
	float minimum = 0;
	float maximum = 1;
	float step = 0.01;
> = 0;




// ---------- Shader Code
sampler_state def_sampler {
	AddressU  = Clamp;
	AddressV  = Clamp;
	Filter    = Linear;
};

struct VertData {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

VertData VSDefault(VertData v_in) 
{
	VertData vert_out;
	vert_out.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = v_in.uv;
	return vert_out;
}

float4 PSDefault(VertData v_in) : TARGET
{
	float t = frac(Time.x * Frequency);

	float half = DutyCycle * 0.5;
	float on = 0.5 - half;
	float off = 0.5 + half;
	float d = min(min(Smoothing * 0.25, half), 1.0 - half);
	t = smoothstep(on - d, on + d, t) * (1 - smoothstep(off - d, off + d, t));

	float4 color = InputA.Sample(def_sampler, v_in.uv);
	color.a *= t;

	return color;
}

technique Draw
{
	pass
	{
		vertex_shader = VSDefault(v_in);
		pixel_shader  = PSDefault(v_in); 
	}
}
